"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1670:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>d,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{GET:()=>i});var s=r(9303),o=r(8716),n=r(670),p=r(7070);async function i(){try{let e={success:!0,data:{status:"healthy",timestamp:new Date().toISOString(),version:process.env.npm_package_version||"0.1.0",environment:"production",uptime:process.uptime(),services:{api:"healthy",database:"mocked",maps:"healthy"}}};return p.NextResponse.json(e)}catch(e){return console.error("Health check error:",e),p.NextResponse.json({success:!1,data:{status:"unhealthy",timestamp:new Date().toISOString(),error:"서비스 상태 확인에 실패했습니다."}},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/Users/junbookpro/Documents/study/vacant-shop-map/app/api/health/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:h,serverHooks:d}=u,l="/api/health/route";function m(){return(0,n.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:h})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[216,351],()=>r(1670));module.exports=a})();